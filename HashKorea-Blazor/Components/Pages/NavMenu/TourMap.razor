@rendermode InteractiveServer

@page "/tour-map"
@using System.Text.Json
@using HashKorea.DTOs.TourMap

@inject IJSRuntime JSRuntime
@inject IConfiguration Configuration
@inject NavigationManager NavigationManager
@inject ITourMapService TourMapService

<div>
    <button id="locate-btn" class="btn btn-primary mb-3">Show My Location</button>
    <button @onclick="NavigateToAddPin" class="btn btn-secondary mb-3">Add Pin</button>
    <div id="map" style="height: 100vh; width: 100%;"></div>
</div>

@code {

    private List<GetTourMapsResponseDto> tourMaps = new List<GetTourMapsResponseDto>();

    private IJSObjectReference? _googleMapsModule;

    protected override async Task OnInitializedAsync()
    {
        var response = await TourMapService.GetTourMaps();
        if (response.Success)
        {
            tourMaps = response.Data;
        }
    }

    // OnAfterRenderAsync method to load Google Maps script and initialize map
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var apiKey = Configuration["GOOGLE_MAPS_API_KEY"];

            var locations = tourMaps.Select(map => new
            {
                Title = map.Title,
                Category = map.Category,
                Lat = map.Lat,
                Lng = map.Lng,
                EnglishAddress = map.EnglishAddress,
                KoreanAddress = map.KoreanAddress
            }).ToList();

            var locationsJson = JsonSerializer.Serialize(locations);

            await JSRuntime.InvokeVoidAsync("loadGoogleMapsScript", apiKey, "initMap", locationsJson);
        }
    }

    private void NavigateToAddPin()
    {
        NavigationManager.NavigateTo("/tour-map/post/add", false);
    }
}
