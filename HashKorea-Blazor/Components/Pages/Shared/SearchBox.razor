@using HashKorea.Common.Constants
@using HashKorea.DTOs.Shared

@rendermode InteractiveServer

@inject ISharedService SharedService

<div class="search-container d-flex align-items-center flex-wrap gap-3 p-3 bg-white rounded-3 shadow-sm w-100">
    <div class="dropdown search-item">
        <MudItem>
            <MudDateRangePicker Label="Period"
            Variant="MudBlazor.Variant.Outlined"
            AdornmentIcon="@Icons.Material.Filled.CalendarToday"
            Color="Color.Primary"
            DateRange="@searchParams.dateRange"
            DateRangeChanged="OnDateRangeChanged" Clearable/>
        </MudItem>
    </div>

    <div class="dropdown search-item">
        <MudItem>
            <MudSelect T="string" Label="Location"
            AdornmentIcon="@Icons.Material.Filled.LocationOn"
            Variant="MudBlazor.Variant.Outlined"
            AnchorOrigin="Origin.BottomCenter"
            Value="searchParams.LocationCD" ValueChanged="OnLocationChanged" Clearable>
                @foreach (var location in locations)
                {
                    <MudSelectItem Value="@location.Code">@location.Name</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
    </div>

    <div class="dropdown search-item">
        <MudItem>
            <MudSelect T="string" Label="Category"
            AdornmentIcon="@Icons.Material.Filled.Category"
            Variant="MudBlazor.Variant.Outlined"
            AnchorOrigin="Origin.BottomCenter"
            Value="searchParams.CategoryCD" ValueChanged="OnCategoryChanged" Clearable>
                @foreach (var category in categories)
                {
                    <MudSelectItem Value="@category.Code">@category.Name</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
    </div>

    <div class="search-input-wrapper">
        <MudTextField T="string"
        Placeholder="Enter search keywords..."
        Variant="MudBlazor.Variant.Outlined"
        Adornment="Adornment.Start"
        AdornmentIcon="@Icons.Material.Filled.Search"
        Value="@searchParams.SearchWord"
        ValueChanged="@((string s) => OnInputChange(s))"
        OnKeyDown="OnKeyDown"
        Immediate="true" />
    </div>

    <button class="btn btn-primary d-flex align-items-center gap-2 search-button" onclick="@(() => OnSearchClick())">
        <RadzenIcon Icon="search" />
        <span>Search</span>
    </button>

</div>

@code {
    [Parameter] public string PostType { get; set; } = POST_TYPE.PROMOTION;
    [Parameter] public EventCallback<SearchParameters> OnSearchChanged { get; set; }

    private List<GetCommonCodeResponseDto> categories = new();
    private List<GetCommonCodeResponseDto> locations = new();

    private SearchParameters searchParams = new SearchParameters();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategories();
        }
    }

    private async Task LoadCategories()
    {
        var response = await SharedService.GetCommonCodes(PostType);
        if (response.Success && response.Data != null)
        {
            categories = response.Data.Where(cc => cc.Type == PostType).ToList();
            locations = response.Data.Where(cc => cc.Type == COMMON_TYPE.LOCATION).ToList();
            StateHasChanged();
        }
    }

    private void OnInputChange(string word)
    {
        searchParams.SearchWord = word;
    }

    private async Task OnKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await OnSearchClick();
        }
    }

    private async Task OnSearchClick()
    {
        if (OnSearchChanged.HasDelegate)
        {
            await OnSearchChanged.InvokeAsync(searchParams);
        }
    }

    private void OnDateRangeChanged(DateRange range)
    {
        searchParams.dateRange = range;
    }

    private void OnLocationChanged(string location)
    {
        searchParams.LocationCD = location;
    }

    private void OnCategoryChanged(string category)
    {
        searchParams.CategoryCD = category;
    }

}
